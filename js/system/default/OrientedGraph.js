var OrientedGraph;OrientedGraph=function(){function t(){this.vertices=new Array,this.edges=new Array}return t.prototype.inGraph=function(t){var e,n,r,i;for(i=this.vertices,n=0,r=i.length;r>n;n++)if(e=i[n],t.getContent().getName()===e.getContent().getName())return!0;return!1},t.prototype.existEdge=function(t,e){var n,r,i,o;for(o=this.edges,r=0,i=o.length;i>r;r++)if(n=o[r],n[0]===t.getContent().getName()&&n[1]===e.getContent().getName())return!0;return!1},t.prototype.addVertice=function(t){return this.inGraph(t)?void 0:this.vertices.push(t)},t.prototype.bindVertices=function(t,e){return this.existEdge(t,e)?void 0:this.edges.push(new Array(t.getContent().getName(),e.getContent().getName()))},t.prototype.mapNeighborhood=function(t,e){var n,r,i,o,g,s;for(g=this.edges,s=[],i=0,o=g.length;o>i;i++)n=g[i],n[0]===t.getContent().getName()?s.push(function(){var t,i,o,g;for(o=this.vertices,g=[],t=0,i=o.length;i>t;t++)r=o[t],n[1]===r.getContent().getName()?g.push(e(r)):g.push(void 0);return g}.call(this)):s.push(void 0);return s},t.prototype.find=function(t){var e,n,r,i;for(i=this.vertices,n=0,r=i.length;r>n;n++)if(e=i[n],e.getContent().getName()===t)return e;return null},t}();